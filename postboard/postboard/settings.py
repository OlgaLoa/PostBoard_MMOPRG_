"""
Django settings for postboard project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$_!hx-yz3=)4u_w)b#8z_rv4goy6dve6-k2k!l*1%0r4(=tpl9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.staticfiles',

    # 'users.apps.UsersConfig',# настройка для AuthorUser(AbstractUser)

    #МОИ ПРИЛОЖЕНИЯ
    'postboard_app',
    'users',

    # для загрузки изображений
    'django_summernote',

    # The following apps are required for allauth
    'django.contrib.auth',
    'django.contrib.messages',
    'allauth',
    'allauth.account',

    # чтобы получить доступ к фильтрам в приложении
    'django_filters',

    #для рассылки по расписанию
    "django_apscheduler",  # пакет использует указание времени периодического выполнения задач в стиле сron

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Add the account middleware for allauth:
    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = 'postboard.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',

                # `allauth` needs this from django
                'django.template.context_processors.request',

                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = [

    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',

]


WSGI_APPLICATION = 'postboard.wsgi.application'

AUTH_USER_MODEL = 'postboard_app.User' # настройка для User(AbstractUser)
# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


STATIC_URL = 'static/'
STATIC_DIR = os.path.join(BASE_DIR,'static')
STATICFILES_DIRS = [
    BASE_DIR / "static"
]
# для загрузки изображений
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
SUMMERNOTE_THEME = 'bs4'  # Show summernote with Bootstrap4


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#НАСТРОЙКА ДЛЯ ОТПРАВКИ ПИСЕМ ПОЛЬЗОВАТЕЛЯМ ПРИ РЕГИСТРАЦИИ
DEFAULT_FROM_EMAIL = 'olgalo-a@yandex.ru' #письма будут отправляться отсюда
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'


EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
EMAIL_HOST_USER = 'olgalo-a@yandex.ru'
EMAIL_HOST_PASSWORD = '3cd2e2afbd57151b21b6e6075c932ced'


ACCOUNT_EMAIL_REQUIRED = True #поле email является обязательным
ACCOUNT_UNIQUE_EMAIL = True  #поле email является уникальным.
ACCOUNT_USERNAME_REQUIRED = False #username необязательный
ACCOUNT_AUTHENTICATION_METHOD = 'email'  #аутентификация будет происходить посредством электронной почты.
ACCOUNT_EMAIL_VERIFICATION = 'none'#верификация почты отсутствует

# LOGIN_URL = 'posts' #заменила next #определяет URL-адрес, на который следует перенаправить неавторизованного пользователя при попытке посетить закрытую страницу сайта;
LOGOUT_REDIRECT_URL = '/posts' #задает URL-адрес, на который перенаправляется пользователь после выхода.


APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"#формат,в кот будет передаваться при рассылке
APSCHEDULER_RUN_NOW_TIMEOUT = 25 #кол-во секунд, за кот функция д вып-ся
SITE_URL ='http://127.0.0.1:8000'